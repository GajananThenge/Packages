What is python?
Python is an high level interpreted language.


Features/Advantages of Python:
	Beginner's Language
	Simple and Easy to Learn
	Interpreted Language
	Cross-platform language :
	Free and Open Source : Python is an example of a FLOSS (Free/Libre and Open Source Software)
	Object-Oriented language: Python classes provide all the standard features of Object Oriented Programming Language
	Extensive Libraries
	Integrated: Python can be easily integrated with languages like C, C++, JAVA etc.
	Databases Connectivity: Python provides interface to all commercial databases.

Advantages of Python


Disadvantages of python
Speed
Python is slower than C or C++. But of course, Python is a high-level language, unlike C or C++ it's not closer to hardware.

Memory Consumption
Python is not a good choice for memory intensive tasks. Due to the flexibility of the data-types, Python's memory consumption is also high.

Runtime Errors
Python programmers cited several issues with the design of the language. Because the language is dynamically typed , 
it requires more testing and has errors that only show up at runtime .



How code is executed in Python? or What are steps to carried out to get output of your python Script?
https://indianpythonista.wordpress.com/2018/01/04/how-python-runs/
Python software will have atleast two components:
	interpreter : Standard implemention is in C languge Cython
	support libraries 

Whether any language is interpreted or compiled is just depends on way of its implementation.


An interpreter is a kind of program that executes other programs. When you write Python programs , 
it converts source code written by the developer into intermediate language which is again translated 
into the native language / machine language that is executed.

The python code you write is compiled into python bytecode, which creates file with extension .pyc . 
The bytecode compilation happened internally, and almost completely hidden from developer. Compilation is 
simply a translation step, and byte code is a lower-level, and platform-independent , representation of your 
source code. Roughly, each of your source statements is translated into a group of byte code instructions. 
This byte code translation is performed to speed execution byte code can be run much quicker than the original source code statements.

The .pyc file , created in compilation step, is then executed by appropriate virtual machines. The Virtual Machine just a big loop 
that iterates through your byte code instructions, one by one, to carry out their operations. The Virtual Machine is the runtime engine 
of Python and it is always present as part of the Python system, and is the component that truly runs the Python scripts . Technically, 
it's just the last step of what is called the Python interpreter.



Compiler:
Converts programming code into machine language code.
Convertion occurres before execution of code.


Interpreter:
CPython is default interpreter for python,written in C.
Interpreter is a software which execute code line-by-line.
	
	
Python program runs directly from the source code . so, Python will fall under byte code interpreted. 

Byte code:
platform independent
low level code




Python Data TYpes:
List
Str
Tuples
Dict
Set
Numeric

lambda functions


Mutable:
Immutable:

Difference between list and Tuple?
Difference between lis and dict?
Difference between is and ==?
How to add two dictionaries?
How can you swap variable in python?

if l = [1,2,3,4,5,6]
out:
l[4]
l[-1]
l[10]
l[10:]



Count number of occurence of each letter in :
"Hello World"

all_freq = {} 
  
for i in test_str: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1

		
# Python3 code to demonstrate  
# each occurrence frequency using  
# collections.Counter() 
from collections import Counter 
  
# initializing string  
test_str = "GeeksforGeeks"
  
# using collections.Counter() to get  
# count of each element in string  
res = Counter(test_str) 
  
# printing result  
print ("Count of all characters in GeeksforGeeks is :\n "
                                           +  str(res)) 
		
		
		
Sort given list based of last element in a list.
l=[[1,2,7],[18,2,-1],[8,2]]




Produce output:
{1: 100, 2: 200, 3: 300, 4: 400}

Given:
l1 = [1,2,3,4]
l2 = [100,200,300,400]


find character if occures consecutively 4 times
s="Hello World"
occ=0
count=3
find ='l'
for i in range(len(s)):
  print(i)

# Increment occ if current char
# is equal to given character
  if (s[i] == find):
    occ += 1
    if occ==count:
      print("Find 3 times")
      break














